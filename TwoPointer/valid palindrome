class Solution {
    public boolean isPalindrome(String s) {
        s = s.toLowerCase().trim();
        s = s.replaceAll("[^a-zA-Z0-9]","");
        int left = 0, right = s.length()-1;
        while(left<right)
        {
            if(s.charAt(left) != s.charAt(right))
            {
                return false;
            }
            left++;
            right--;
        }

        return true;
    }
}

// Time complexity : O(n), in length n of the string. We traverse over each character at-most once, until the two pointers meet in the middle, or when we break and return early.

// Space complexity : O(1). No extra space required, at all.
